name: CI

on:
  pull_request:
  push:
    branches: ["main"]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 24
          cache: gradle
      - name: Grant execute permission for Gradle
        run: chmod +x gradlew
      - name: Build & Test
        run: ./gradlew clean build --no-daemon

  docker-image:
    needs: build-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/app:sha-${{ github.sha }}
          docker build -t $IMAGE .
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
      - name: Push image
        run: docker push $IMAGE

  compose-smoke:
    needs: docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create .env
        run: |
          echo DB_USER=demo >> .env
          echo DB_PASSWORD=demo >> .env
          echo DB_NAME=demoapp >> .env
      - name: Use pushed image with compose
        env:
          IMAGE: ghcr.io/${{ github.repository }}/app:sha-${{ github.sha }}
        run: |
          sed -i 's|build: .|image: '"$IMAGE"'|g' docker-compose.yml
          docker compose up -d
          echo "Waiting for app to start..." && sleep 20
          docker compose logs app
      - name: Health check
        run: |
          (curl -fsS http://localhost:8080/actuator/health || curl -fsS http://localhost:8080) || (docker compose logs app && exit 1)
